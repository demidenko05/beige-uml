<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Beigesoft UML project</title>
   </properties>

  <body>

    <section name="Getting started">

      <h4>Creating UML diagram with Beige-UML SWING interface</h4>
            
      <p>1. Download latest release <b>beige-uml-swing-[VERSION]-jar-with-dependencies.jar</b> from <a href="https://repo1.maven.org/maven2/org/beigesoft/beige-uml-swing/">https://repo1.maven.org/maven2/org/beigesoft/beige-uml-swing/</a></p>
      <p>2. You should have Java SE Runtime Environment (JRE) version 6+ to run this application. 
       Otherwise install JRE for your operation system (see <a target="#blank" href="http://www.oracle.com/technetwork/java/javase/overview/index.html">oracle.com</a>)</p>
      <p>3. Launch <b>beige-uml-swing-[VERSION]-jar-with-dependencies.jar</b> (usually by right click from file explorer). To launch from command line execute: "java -jar beige-uml-swing-jar-with-dependencies.jar". 
      If fonts appear ugly then use java option "-Dawt.useSystemAAFontSettings=gasp" to use OS fonts, i.e. launch: "java -jar -Dawt.useSystemAAFontSettings=gasp beige-uml-swing-jar-with-dependencies.jar" </p>
      <p>4. In menu click <b>create new project</b>. Complete project properties, e.g. project name set to "MyUml" and choose path to project (parent folder):
      </p>
      <p align="center"><img style="max-width: 100%" alt="New project" src="include/newproject.png" /></p>
      <p>4. In menu click <b>add class diagram</b>. Click toolbox button "Class" then click on canvas to place UML-class. 
      Class editor will be opened. Enter class name "Business". 
      By the same way add two classes "Owner" and "Employee". 
      </p>
      <p align="center"><img style="max-width: 100%" alt="Add class diagram" src="include/addclassdiagram.png" /></p>
      <p>5. Choose project folder "MyUml" at the project tree then press "Ctrl+S" to save diagram into file. 
      Enter "Business" as file name.  
      </p>
      <p>6. Click "Realization" button on toolbox, then click inside class "Business". 
      Press mouse left button on the end rectangle of relation and drag inside "Owner".   
      </p>
      <p align="center"><img style="max-width: 100%" alt="Add realization" src="include/addrealization.png" /></p>
      <p>7. Add realization for "Employee" then save "Ctrl-S":  
      </p>
      <p align="center"><img style="max-width: 100%" alt="Binary realizations" src="include/binaryrealizations.png" /></p>
      <p>8. Select both realizations and delete by "Ctrl+Del".    
      </p>
      <p>9. Add N-ary relationship - select from toolbox and click inside "Business".
      In relation editor change relation kind from "Association" to "Realization".
      Select intermediate joint to "BUS_X". Then add classes "Owner" and "Employee"- click button "add" then choose shape (class):    
      </p>
      <p align="center"><img style="max-width: 100%" alt="edit realization" src="include/editrealization.png" /></p>
      <p>10. Press "OK" to apply changes. Result diagram will be:    
      </p>
      <p align="center"><img style="max-width: 100%" alt="Result" src="include/result.png" /></p>
      
      <p>*if you have problem with moving relationship end, then increase "width drag rectangle" in project settings</p>
      <h4>Using Beige-UML in a Maven project.</h4>
      <p>The best way is use BeigeUML in a Maven project.</p>
      
      <p>
      Make following steps to do it:
      </p>
      <ol>
        <li>If you haven't Maven install it <a target="#blank" href="http://maven.apache.org/download.html">Download and Install Maven</a></li> 
        <li>If your java project is non-Maven create simple Maven project from command line:
          <pre style="white-space: pre-wrap;">
mvn -B archetype:generate \
-DarchetypeGroupId=org.apache.maven.archetypes \
-DgroupId=com.mycompany.app \
-DartifactId=my-app
          </pre>
          Where replace group and artifact ID with yours, then copy your java code into this newly created Maven project.
          Add these entries into <b>pom.xml</b>:
          <pre style="white-space: pre-wrap;">
&lt;reporting&gt;
  &lt;plugins&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
      &lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt;
      &lt;version&gt;2.10.2&lt;/version&gt;
      &lt;configuration&gt;
        &lt;doclet&gt;org.beigesoft.uml.service.swing.CreatorDoclet&lt;/doclet&gt;
        &lt;docletArtifact&gt;
          &lt;groupId&gt;org.beigesoft&lt;/groupId&gt;
          &lt;artifactId&gt;beige-uml-swing&lt;/artifactId&gt;
          &lt;version&gt;2.1.9&lt;/version&gt;
        &lt;/docletArtifact&gt;
        &lt;useStandardDocletOptions&gt;true&lt;/useStandardDocletOptions&gt;
      &lt;/configuration&gt;
    &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/reporting&gt; 
          </pre>
          Install your Maven project from command line "mvn install", then create Maven site by run "mvn site:site".
          Maven site will be in folder "target", UML project will be in folder "src/uml". 
          You can launch <b>beige-uml-swing-jar-with-dependencies.jar</b> and make some changes on diagram, then recreate site again.
        </li>
      </ol>

<h4>Using Beige-UML to generate javadoc from command line</h4>
<p>
Assume your source path is "/home/java/MyProj1/src" and packages start with "org", and you put beige-uml-swing-jar-with-dependencies.jar into "/home/java/util". To generate Javadoc in "/home/javadoc"  and project UML in "/home/javadocuml" execute this command:
<pre style="white-space: pre-wrap;">
javadoc -d /home/javadoc -doclet org.beigesoft.uml.service.swing.CreatorDoclet -docletpath /home/java/util/beige-uml-swing-jar-with-dependencies.jar -umlprojectpath /home/javadocuml -sourcepath /home/java/MyProj1/src -subpackages org
</pre>
Then launch beige-uml-swing-jar-with-dependencies.jar and open UML project "/home/javadocuml" then make manually changes on diagrams you want. Then again launch javadoc.
</p>
<p>*JDK8 and last beige-uml-swing-jar-with-dependencies.jar give out of memory error on huge projects, previous version and JDK7 don't.</p>

    <h4>Beige-UML screenshots</h4>

      <h4 align="center">Java Swing UML editor screenshots:</h4>
     
      <p align="center">Class diagram demo:</p>
      <p align="center"><img style="max-width: 100%" src="include/dclbusiness.png" /></p>
    	
      <p align="center">Package diagram demo:</p>
      <p align="center"><img style="max-width: 100%" src="include/dpkpackage1.png" /></p>
      
      <p align="center">Object diagram demo:</p>
      <p align="center"><img style="max-width: 100%" src="include/dobobject1.png" /></p>
      
      <p align="center">Use case diagram demo:</p>
      <p align="center"><img style="max-width: 100%" src="include/ducusecase1.png" /></p>
      
      <p align="center">Sequence diagram demo1:</p>
      <p align="center"><img style="max-width: 100%" src="include/dsecsecdemo1.png" /></p>
      
      <p align="center">Sequence diagram demo2:</p>
      <p align="center"><img style="max-width: 100%" src="include/dsecsecdemo2.png" /></p>
      
      <p align="center">Sequence diagram demo3:</p>
      <p align="center"><img style="max-width: 100%" src="include/dsecsecdemo3.png" /></p>
    
      <p align="center">Modified javadoc UML diagram:</p>
      <p align="center"><img style="max-width: 100%" src="include/dcljavadocuml.png" /></p>
  
      <p align="center">Modified javadoc html file:</p>
      <p align="center"><img style="max-width: 100%" src="include/dcljavadochtml.png" /></p>
  
      <h4 align="center">Android UML editor screenshots:</h4>
  
      <p align="center">Class diagram demo:</p>
      <p align="center"><img style="max-width: 100%" src="include/androidclass1.png" /></p>
  
      <p align="center">Package diagram demo:</p>
      <p align="center"><img style="max-width: 100%" src="include/androidpackage1.png" /></p>
  
      <p align="center">Use-case diagram demo:</p>
      <p align="center"><img style="max-width: 100%" src="include/androidusecase1.png" /></p>
  
      <p align="center">Sequence diagram demo:</p>
      <p align="center"><img style="max-width: 100%" src="include/android-sdexec.png" /></p>
      <p align="center"><img style="max-width: 100%" src="include/androidobject1.png" /></p>
            
      <p align="center">Edit class sample:</p>
      <p align="center"><img style="max-width: 100%" src="include/androideditclass1.png" /></p>
  
      <h4 align="center">Android file-chooser screenshots:</h4>
  
      <p align="center">Choose diagram file in current project:</p>
      <p align="center"><img style="max-width: 100%" src="include/androidfilechooser2.png" /></p>

    </section>

  </body>

</document>
